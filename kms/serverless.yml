service:
  name: kms
  awsKmsKeyArn: ${ssm:/aws/reference/secretsmanager/${self:custom.stage}/all/kmsArn~true}

provider:
  name: aws
  endpointType: regional
  runtime: go1.x
  stage: alpha
  region: eu-central-1
  apiName: offen-${self:provider.stage}
  logs:
    restApi: true

package:
  exclude:
    - '*/**'
    - '*.*'
  individually: true
  excludeDevDependencies: false

plugins:
  - serverless-domain-manager

custom:
  stage: ${opt:stage, self:provider.stage}
  domain:
    production: kms.offen.dev
    staging: kms-staging.offen.dev
    alpha: kms-alpha.offen.dev
  origin:
    production: vault.offen.dev
    staging: vault-staging.offen.dev
    alpha: vault-alpha.offen.dev
  jwtPublicKey:
    production: https://accounts.offen.dev/api/key
    staging: https://accounts-staging.offen.dev/api/key
    alpha: https://accounts-alpha.offen.dev/api/key
  cookieDomain:
    production: offen.dev
    staging: offen.dev
    alpha: offen.dev
  customDomain:
    basePath: ''
    certificateName: '*.offen.dev'
    domainName: ${self:custom.domain.${self:custom.stage}}
    stage: ${self:custom.stage}
    endpointType: regional
    createRoute53Record: false

functions:
  app:
    package:
      include:
        - kms/bin/kms
    handler: kms/bin/kms
    environment:
      CORS_ORIGIN: https://${self:custom.origin.${self:custom.stage}}
      KEY_CONTENT: '${ssm:/aws/reference/secretsmanager/${self:custom.stage}/kms/key~true}'
      JWT_PUBLIC_KEY: ${self:custom.jwtPublicKey.${self:custom.stage}}
      COOKIE_DOMAIN: ${self:custom.cookieDomain.${self:custom.stage}}
    events:
      - http:
          path: '{proxy+}'
          method: any
