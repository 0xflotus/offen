service:
  name: server
  awsKmsKeyArn: ${ssm:/aws/reference/secretsmanager/${self:custom.stage}/all/kmsArn~true}

provider:
  name: aws
  endpointType: regional
  runtime: go1.x
  stage: alpha
  region: eu-central-1
  apiName: offen-${self:provider.stage}
  logs:
    restApi: true
  environment:
    JWT_PUBLIC_KEY: ${self:custom.jwtPublicKey.${self:custom.stage}}
    SECURE_COOKIE: 1
    OPTOUT_COOKIE_DOMAIN: ${self:custom.optoutCookieDomain.${self:custom.stage}}
    CORS_ORIGIN: https://${self:custom.origin.${self:custom.stage}}
    KMS_ENCRYPTION_ENDPOINT: ${self:custom.encryptionEndpoint.${self:custom.stage}}
    POSTGRES_CONNECTION_STRING: ${ssm:/aws/reference/secretsmanager/${self:custom.stage}/server/postgresConnectionString~true}
    COOKIE_EXCHANGE_SECRET: ${ssm:/aws/reference/secretsmanager/${self:custom.stage}/server/cookieExchangeSecret~true}
    EVENT_RETENTION_PERIOD: 4464h

package:
  individually: true
  excludeDevDependencies: false
  exclude:
  - '**/*'

plugins:
  - serverless-domain-manager
  - serverless-apigw-binary

custom:
  stage: ${opt:stage, self:provider.stage}
  domain:
    production: server.offen.dev
    staging: server-staging.offen.dev
    alpha: server-alpha.offen.dev
  origin:
    production: vault.offen.dev
    staging: vault-staging.offen.dev
    alpha: vault-alpha.offen.dev
  encryptionEndpoint:
    production: https://kms.offen.dev/encrypt
    staging: https://kms-staging.offen.dev/encrypt
    alpha: https://kms-alpha.offen.dev/encrypt
  optoutCookieDomain:
    production: .offen.dev
    staging: .offen.dev
    alpha: .offen.dev
  jwtPublicKey:
    production: https://accounts.offen.dev/api/key
    staging: https://accounts-staging.offen.dev/api/key
    alpha: https://accounts-alpha.offen.dev/api/key
  apigwBinary:
    types:
      - image/*
  customDomain:
    basePath: ''
    certificateName: '*.offen.dev'
    domainName: ${self:custom.domain.${self:custom.stage}}
    stage: ${self:custom.stage}
    endpointType: regional
    createRoute53Record: false

functions:
  expire:
    package:
      include:
      - server/bin/expire
    handler: server/bin/expire
    events:
      - schedule: rate(1 day)
  app:
    package:
      include:
      - server/bin/server
    handler: server/bin/server
    events:
      - http:
          path: '{proxy+}'
          method: any
