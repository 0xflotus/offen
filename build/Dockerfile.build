FROM node:12 as auditorium

COPY ./auditorium/package.json ./auditorium/package-lock.json /code/deps/
COPY ./packages /code/packages
WORKDIR /code/deps
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true
RUN npm ci
COPY ./auditorium /code/auditorium
COPY ./banner.txt /code/banner.txt
WORKDIR /code/auditorium
RUN cp -a /code/deps/node_modules /code/auditorium/
ENV NODE_ENV production
RUN npm run build

FROM node:12 as script

COPY ./script/package.json ./script/package-lock.json /code/deps/
COPY ./packages /code/packages
WORKDIR /code/deps
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true
RUN npm ci
COPY ./script /code/script
COPY ./banner.txt /code/banner.txt
WORKDIR /code/script
RUN cp -a /code/deps/node_modules /code/script/
ENV NODE_ENV production
RUN npm run build

FROM node:12 as vault

COPY ./vault/package.json ./vault/package-lock.json /code/deps/
COPY ./packages /code/packages
WORKDIR /code/deps
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true
RUN npm ci
COPY ./vault /code/vault
COPY ./banner.txt /code/banner.txt
WORKDIR /code/vault
RUN cp -a /code/deps/node_modules /code/vault/
ENV NODE_ENV production
RUN npm run build

FROM bepsays/ci-goreleaser:latest as server

RUN apt-get update \
    && apt-get -y install musl-tools \
    && rm -rf /var/lib/apt/lists/*

COPY ./server/go.mod ./server/go.sum /code/server/
WORKDIR /code/server
RUN go mod download

COPY ./server /code/server

ARG GIT_REVISION
ARG BUILD_LINUX
ARG BUILD_WINDOWS
ARG BUILD_DARWIN

COPY --from=script /code/script/dist /code/server/public
COPY --from=vault /code/vault/dist /code/server/public
COPY --from=auditorium /code/auditorium/dist /code/server/public

RUN go get github.com/rakyll/statik
RUN statik -dest public -src public
RUN statik -dest locales -src locales

ENV GOARCH amd64
ENV CGO_ENABLED 1

ENV GOOS linux
RUN if [ "x$BUILD_LINUX" != "x" ]; then CC=musl-gcc go build -ldflags "-linkmode external -extldflags '-static' -s -w -X github.com/offen/offen/server/config.Revision=$GIT_REVISION" -o bin/offen-linux-amd64 cmd/offen/main.go; fi

ENV GOOS windows
RUN if [ "x$BUILD_WINDOWS" != "x" ]; then CC=x86_64-w64-mingw32-gcc go build -ldflags "-linkmode external -extldflags '-static' -s -w -X github.com/offen/offen/server/config.Revision=$GIT_REVISION" -o bin/offen-windows-amd64.exe cmd/offen/main.go; fi

ENV GOOS darwin
RUN if [ "x$BUILD_DARWIN" != "x" ]; then CC=o64-clang go build -ldflags "-s -w -X github.com/offen/offen/server/config.Revision=$GIT_REVISION" -o bin/offen-darwin-amd64 cmd/offen/main.go; fi
