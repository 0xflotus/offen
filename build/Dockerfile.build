FROM node:12 as auditorium

COPY ./auditorium/package.json ./auditorium/package-lock.json /code/deps/
COPY ./packages /code/packages
WORKDIR /code/deps
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true
RUN npm ci
COPY ./auditorium /code/auditorium
COPY ./banner.txt /code/banner.txt
WORKDIR /code/auditorium
RUN cp -a /code/deps/node_modules /code/auditorium/
ENV NODE_ENV production
RUN npm run build

FROM node:12 as script

COPY ./script/package.json ./script/package-lock.json /code/deps/
COPY ./packages /code/packages
WORKDIR /code/deps
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true
RUN npm ci
COPY ./script /code/script
COPY ./banner.txt /code/banner.txt
WORKDIR /code/script
RUN cp -a /code/deps/node_modules /code/script/
ENV NODE_ENV production
RUN npm run build

FROM node:12 as vault

COPY ./vault/package.json ./vault/package-lock.json /code/deps/
COPY ./packages /code/packages
WORKDIR /code/deps
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true
RUN npm ci
COPY ./vault /code/vault
COPY ./banner.txt /code/banner.txt
WORKDIR /code/vault
RUN cp -a /code/deps/node_modules /code/vault/
ENV NODE_ENV production
RUN npm run build

FROM golang:1.13 as statik

WORKDIR /code/server
COPY ./server /code/server

COPY --from=script /code/script/dist /code/server/public
COPY --from=vault /code/vault/dist /code/server/public
COPY --from=auditorium /code/auditorium/dist /code/server/public

RUN go get github.com/rakyll/statik
RUN statik -dest public -src public
RUN statik -dest locales -src locales

FROM karalabe/xgo-1.13.x as compiler

ARG rev
ENV GIT_REVISION=$rev
ARG targets
ENV TARGETS=$targets
ARG ldflags
ENV LDFLAGS=$ldflags

COPY --from=statik /code /go/src/github.com/offen/offen
ENV GOPATH /go
WORKDIR /build

RUN xgo --targets=$TARGETS --ldflags="-linkmode external -extldflags '$LDFLAGS' -s -w -X github.com/offen/offen/server/config.Revision=$GIT_REVISION" github.com/offen/offen/server/cmd/offen

RUN md5sum * > checksums.txt
